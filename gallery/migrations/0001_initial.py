# Generated by Django 3.1.4 on 2020-12-12 16:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Category's name", max_length=50, verbose_name='Nom de la catégorie')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('in_menu', models.BooleanField(default=False, verbose_name='Catégorie apparait dans menu')),
                ('order_menu', models.IntegerField(default=0, verbose_name="Ordre d'apparition dans menu")),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Picture's title", max_length=120, verbose_name='Titre du concours')),
                ('theme', models.CharField(max_length=200, null=True, verbose_name='Thème du concours')),
                ('description', models.TextField(verbose_name='Desciption du concours')),
                ('date_begin_upload', models.DateField(verbose_name='Date de début dépot photo')),
                ('date_end_upload', models.DateField(verbose_name='Date de fin dépot photo')),
                ('date_begin_vote', models.DateField(verbose_name='Date de début du vote')),
                ('date_end_vote', models.DateField(verbose_name='Date de fin du vote')),
                ('archived', models.BooleanField(default=False, verbose_name='Concours archivé')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création du concours')),
            ],
        ),
        migrations.CreateModel(
            name='ContestPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_upload', models.DateTimeField(auto_now_add=True, verbose_name='Date de dépot photo')),
                ('id_contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.contest')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Picture's title", max_length=120, verbose_name='Titre de la photo')),
                ('file_name', models.ImageField(upload_to='', verbose_name='Fichier image')),
                ('description', models.TextField(verbose_name='Desciption de la photo')),
                ('technical', models.TextField(null=True, verbose_name='Commentaires techniques')),
                ('camera', models.CharField(max_length=200, null=True, verbose_name='Appareil photo utilisé')),
                ('lens', models.CharField(max_length=200, null=True, verbose_name='Objectif utilisé')),
                ('place', models.CharField(max_length=255, null=True, verbose_name='Lieu de prise')),
                ('taken_date', models.DateField(null=True, verbose_name='Date de prise')),
                ('global_score', models.FloatField(null=True, verbose_name='Note globale')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de téléchargement')),
                ('categories', models.ManyToManyField(to='gallery.Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True, verbose_name='Note pour une photo et un concours donné')),
                ('date_score', models.DateTimeField(auto_now_add=True, verbose_name='Date de la note')),
                ('id_contest_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.contestpicture')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_intention', models.IntegerField(null=True, verbose_name='note intention')),
                ('score_technical', models.IntegerField(null=True, verbose_name='note technique')),
                ('score_picture', models.IntegerField(null=True, verbose_name='note photo')),
                ('score_visual', models.IntegerField(null=True, verbose_name='note rendu')),
                ('score_global', models.IntegerField(null=True, verbose_name='note globale')),
                ('comment_intention', models.TextField(null=True, verbose_name='Commentaire intention')),
                ('comment_technical', models.TextField(null=True, verbose_name='Commentaire technique')),
                ('comment_picture', models.TextField(null=True, verbose_name='Commentaire photo')),
                ('comment_visual', models.TextField(null=True, verbose_name='Commentaire rendu')),
                ('comment_global', models.TextField(null=True, verbose_name='Commentaire global')),
                ('calculated_score', models.FloatField(null=True, verbose_name='Note calculée')),
                ('review_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de la critique')),
                ('picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.picture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='contestpicture',
            name='id_picture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gallery.picture'),
        ),
    ]
